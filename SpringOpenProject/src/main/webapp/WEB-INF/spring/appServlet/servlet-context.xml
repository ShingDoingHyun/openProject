<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/uploadFile/**" location="/uploadFile/" />


	<resources mapping="../css/**" location="/resources/css/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 파일업로드를 위해 사용 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>


	<context:component-scan
		base-package="com.bitcamp.op" />



	<!-- db연동을 위한 datasource빈 등록 : jdbcTemplate에 주입, mybatis 설정 -->
	<beans:bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<beans:property name="driverClass"
			value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="jdbcUrl"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<beans:property name="user" value="test" />
		<beans:property name="password" value="1234" />
	</beans:bean>


	<!-- jdbcTemplate 빈 등록 : dao에 주입 -->
	<beans:bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource">
		<!-- <beans:property name="dataSource" ref="dataSource"></beans:property> -->
	</beans:bean>

	<!-- Spring+mybatis연동 설정 -->
	<beans:bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations"
			value="classpath:com/bitcamp/op/mapper/mybatis/*.xml" />
	</beans:bean>



	<!-- SessionTemplate 클래스 등록 -->
	<beans:bean id="salSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg
			ref="sqlSessionFactoryBean" />
	</beans:bean>


	<beans:bean id="mybatisMemberDao"
		class="com.bitcamp.op.member.dao.MybatisMemberDao" />




	<!-- memberDao 빈 등록 -->
	<beans:bean id="memberDao"
		class="com.bitcamp.op.member.dao.MemberDaoImpl" />

	<beans:bean id="jdbcTemplateMemberDao"
		class="com.bitcamp.op.member.dao.JdbcTemplateMemberDao" />
	<!-- 로그인 서비스 빈 등록 -->
	<beans:bean id="memberLoginService"
		class="com.bitcamp.op.member.service.MemberLoginService">
		<!-- <beans:property name="memberDao" ref="memberDao" /> -->
	</beans:bean>
	<!-- 회원가입빈 -->
	<beans:bean id="memberJoinService"
		class="com.bitcamp.op.member.service.MemberJoinService">
		<!-- <beans:property name="memberDao" ref="memberDao" /> -->
	</beans:bean>
	<!-- 회원리스트 -->
	<beans:bean id="memberListService"
		class="com.bitcamp.op.member.service.MemberListService">
		<!-- <beans:property name="memberDao" ref="memberDao" /> -->
	</beans:bean>
	<!-- 회원삭제 -->
	<beans:bean id="memberDeleteService"
		class="com.bitcamp.op.member.service.MemberDeleteService">
	</beans:bean>

	<!-- empDao 빈 등록 -->
	<beans:bean id="empDao"
		class="com.bitcamp.op.emp.dao.EmpDaoEmpl" />
	<!-- 사원리스트 -->
	<beans:bean id="empListService"
		class="com.bitcamp.op.emp.service.EmpListService">
		<beans:property name="empDao" ref="empDao" />
	</beans:bean>

	<!-- <interceptors> 로긴체크 <interceptor> <mapping path="/member/**" /> <exclude-mapping 
		path="/member/memberLoginForm" /> <beans:bean class="com.bitcamp.op.member.interceptor.AutoCheckInterceptor" 
		/> </interceptor> </interceptors> -->

	<!-- PlatformTransactionManager 빈 설정 -->
	<!-- <beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> </beans:bean> @Transactional 
		애노테이션 활성화 설정 <tx:annotation-driven transaction-manager="transactionManager" 
		/> -->

	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource">
			<beans:ref bean="dataSource" />
		</beans:property>
	</beans:bean>


	<!-- 메일 전송 서비스 -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" /><!-- 465 or 25 -->
		<beans:property name="username"
			value="devsdhyun486@gmail.com" />
		<beans:property name="password" value="!awd486fth486" />
		<beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>


	<beans:bean id="simpleMailSenderService"
		class="com.bitcamp.op.sendmail.service.SimpleMailSenderService" />

	<tx:annotation-driven
		transaction-manager="transactionManager" />


</beans:beans>
